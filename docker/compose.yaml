networks:
  model-network:
    driver: bridge

volumes:
  vault-file:

services:
  vault:
    image: hashicorp/vault:1.20
    container_name: vault
    cap_add:
      - IPC_LOCK
    ports:
      - "8200:8200"
    environment:
      VAULT_LOCAL_CONFIG: |
        {
          "storage": {
            "file": {
              "path": "/vault/file"
            }
          },
          "listener": [{
            "tcp": {
              "address": "0.0.0.0:8200",
              "tls_disable": true
            }
          }],
          "default_lease_ttl": "0",
          "max_lease_ttl": "0",
          "ui": true
        }
    command: server
    volumes:
      - vault-file:/vault/file
    healthcheck:
      test: [ "CMD-SHELL", "vault status || exit 0" ]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:17.5
    container_name: postgresql-model
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    ports:
      - "5432:5432"
    networks:
      - model-network

  app:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    container_name: model-app
    depends_on:
      - vault
      - postgres
    environment:
      TZ: America/Sao_Paulo
      VAULT_ADDR: http://vault:8200
      VAULT_TOKEN: ${VAULT_TOKEN}

      GEMINI_API_KEY: ${GEMINI_API_KEY}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      NAME_ADMIN: ${NAME_ADMIN}
      PASSWORD_ADMIN: ${PASSWORD_ADMIN}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRATION: ${JWT_EXPIRATION}
    ports:
      - "8080:8080"
    networks:
      - model-network
    command: >
      sh -c "apk add --no-cache curl jq &&
      echo 'Tentando buscar secret no Vault...' &&
      curl -s --header 'X-Vault-Token: $VAULT_TOKEN' $VAULT_ADDR/v1/secret/data/meu-segredo |
      jq '.data.data'"
    restart: always